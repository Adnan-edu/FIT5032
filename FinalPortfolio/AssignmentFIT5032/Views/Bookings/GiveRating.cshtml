@model AssignmentFIT5032.Models.Booking

@{
    ViewBag.Title = "GiveRating";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Comment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.CheckInDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.CheckInDate, new { disabled = "disabled", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CheckInDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CheckOutDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.CheckOutDate, new { disabled = "disabled", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CheckOutDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsMealRequired, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsMealRequired)
                    @Html.ValidationMessageFor(model => model.IsMealRequired, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AspNetUserId, "AspNetUserId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AspNetUserId", null, htmlAttributes: new { disabled = "disabled", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AspNetUserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoomId, "RoomId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RoomId", null, htmlAttributes: new { disabled = "disabled", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RoomId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contents, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contents, new { htmlAttributes = new { @class = "form-control", @id = "mytextarea" } })
                @Html.ValidationMessageFor(model => model.Contents, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RATING, "RATING", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RATING", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RATING, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        tinymce.init({
            selector: '#mytextarea'
        });
    </script>
}
